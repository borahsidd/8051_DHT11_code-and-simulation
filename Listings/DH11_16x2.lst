C51 COMPILER V9.56.0.0   DH11_16X2                                                         01/27/2021 18:42:17 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE DH11_16X2
OBJECT MODULE PLACED IN .\Objects\DH11_16x2.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE DH11_16x2.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings
                    -\DH11_16x2.lst) TABS(2) OBJECT(.\Objects\DH11_16x2.obj)

line level    source

   1          #include <reg51.h>
   2          #define dataport P2
   3          
   4          sbit rs=P2^0;
   5          sbit rw=P2^1;
   6          sbit e=P2^2;
   7          
   8          sbit DHT11=P1^7;                     //Connect DHT11 output Pin to P1.7 Pin 
   9          
  10          int I_RH,D_RH,I_Temp,D_Temp,CheckSum;
  11          
  12          int x;
  13          unsigned char cmd;
  14          int i,j;
  15          
  16          //////////////////////////////////Delay program
  17          void delay(unsigned int msec)
  18          {
  19   1        for(i=0;i<msec;i++)
  20   1        for(j=0;j<1000;j++);
  21   1      }
  22          ////////////////////////////////////20 Milisecond delay function
  23          void delay20ms()    
  24          {
  25   1        TMOD = 0x01;      /* Timer0 delay function */
  26   1        TH0 = 0xB8;       /* Load higher 8-bit in TH0 */
  27   1        TL0 = 0x0C;       /* Load lower 8-bit in TL0 */
  28   1        TR0 = 1;          /* Start timer0 */
  29   1        while(TF0 == 0);  /* Wait until timer0 flag set */
  30   1        TR0 = 0;          /* Stop timer0 */
  31   1        TF0 = 0;          /* Clear timer0 flag */
  32   1      }
  33          
  34          
  35          ////////////////////////////////////30 Microsecond delay function
  36          void delay30us()            
  37          {
  38   1        TMOD = 0x01;      /* Timer0 mode1 (16-bit timer mode) */
  39   1        TH0 = 0xFF;       /* Load higher 8-bit in TH0 */
  40   1        TL0 = 0xE4;       /* Load lower 8-bit in TL0 */
  41   1        TR0 = 1;          /* Start timer0 */
  42   1        while(TF0 == 0);  /* Wait until timer0 flag set */
  43   1        TR0 = 0;          /* Stop timer0 */
  44   1        TF0 = 0;          /* Clear timer0 flag */
  45   1      }
  46          ////////////////////////////// Function to send command to LCD
  47          void lcd_cmd(unsigned char item) 
  48          { 
  49   1        ////////////////////////////Sending upper nibble of command
  50   1        unsigned char a;
  51   1        a=item&0xf0;
  52   1        dataport=a;
  53   1        rs=0;
  54   1        rw=0;
C51 COMPILER V9.56.0.0   DH11_16X2                                                         01/27/2021 18:42:17 PAGE 2   

  55   1        e=1;
  56   1        delay(1);
  57   1        e=0;
  58   1        ////////////////////////////Sending lower nibble of command
  59   1        a=(item<<4)&0xf0;
  60   1        dataport=a;
  61   1        rs=0;
  62   1        rw=0;
  63   1        e=1;
  64   1        delay(1);
  65   1        e=0;
  66   1      }
  67          //////////////////////////////// Function to send data to LCD
  68          
  69          void lcd_data(unsigned char item) 
  70          { 
  71   1        ////////////////////////////Sending upper nibble of data_
  72   1        unsigned char a;
  73   1        a=item&0xf0;
  74   1        dataport=a;
  75   1        rs=1;
  76   1        rw=0;
  77   1        e=1;
  78   1        delay(1);
  79   1        e=0;
  80   1        ////////////////////////////Sending lower nibble of data_
  81   1        a=(item<<4)& 0xf0;
  82   1        dataport=a;
  83   1        rs=1;
  84   1        rw=0;
  85   1        e=1;
  86   1        delay(1);
  87   1        e=0;  
  88   1      }
  89          //////////////////////////////// Function to send more than one character/data
  90          void message(unsigned char *s)
  91          {
  92   1        while(*s)
  93   1          lcd_data(*s++);
  94   1      }
  95          ///////////////////////////LCD initialising command
  96          void lcdinit()
  97          {
  98   1        lcd_cmd(0x33); // These two commands (0x33 and ox32) are used in 4 bit mode of LCD 
  99   1        lcd_cmd(0x32);
 100   1        lcd_cmd(0x28); //4 bit mode of LCD
 101   1        lcd_cmd(0x06); //display from left to right
 102   1        lcd_cmd(0x0C); //display ON, cursor hide
 103   1      }
 104          ///////////////////////////Microcontroller send request
 105          void Request()    
 106          {
 107   1        DHT11 = 0;          //set DH11 pin low
 108   1        delay20ms();        //wait for 20ms
 109   1        DHT11 = 1;          //set DH11 pin High
 110   1      }
 111          //////////////////////////Function for Receive response from DHT11
 112          void Response()   
 113          {
 114   1        while(DHT11==1);    //set DH11 pin High
 115   1        while(DHT11==0);    //set DH11 pin low
 116   1        while(DHT11==1);    //set DH11 pin High
C51 COMPILER V9.56.0.0   DH11_16X2                                                         01/27/2021 18:42:17 PAGE 3   

 117   1      } 
 118          ////////////////////////// Function to Receive data(0,1) from DH11 
 119          int Receive_data()  
 120          {
 121   1        int q,c=0;              ///q is used to process 8 bit of data at a time and 'c' is used to store 0 or 1 
 122   1        for (q=0; q<8; q++)
 123   1        {
 124   2          while(DHT11==0);      // check received bit 0 or 1
 125   2          delay30us();
 126   2          if(DHT11 == 1)        //If high pulse is greater than 30ms
 127   2          c = (c<<1)|(0x01);    //Then its logic HIGH i.e c=1
 128   2          else                  //otherwise its logic LOW i.e c=0
 129   2          c = (c<<1);
 130   2          while(DHT11==1);
 131   2        }
 132   1        return c;
 133   1      }
 134          
 135          
 136          ///////////////////////////Main function
 137          void main()
 138          {   
 139   1          unsigned int a, b, c, d;
 140   1          lcdinit();
 141   1          lcd_cmd(0x01);
 142   1          lcd_cmd(0x80);
 143   1          message("Initialising");
 144   1          lcd_cmd(0x8c);
 145   1          lcd_data('.');
 146   1          delay(50);
 147   1          lcd_cmd(0x8d);
 148   1          lcd_data('.');
 149   1          delay(50);
 150   1          lcd_cmd(0x8e);
 151   1          lcd_data('.');
 152   1          delay(50);
 153   1          lcd_cmd(0x8f);
 154   1          lcd_data('.');
 155   1          delay(50);
 156   1          lcd_cmd(0x01);  
 157   1        while(1)
 158   1        {  
 159   2          lcdinit();
 160   2          Request();  //send start pulse 
 161   2          Response(); //receive response 
 162   2          I_RH=Receive_data();      //store first eight bit in I_RH 
 163   2          D_RH=Receive_data();      //store next eight bit in D_RH 
 164   2          I_Temp=Receive_data();    //store next eight bit in I_Temp
 165   2          D_Temp=Receive_data();    //store next eight bit in D_Temp 
 166   2          CheckSum=Receive_data();  //store next eight bit in CheckSum
 167   2          
 168   2          if ((I_RH + D_RH + I_Temp + D_Temp) != CheckSum)    // check wheather data is valid or invalid
 169   2          {
 170   3            lcd_cmd(0x80);
 171   3            message("  Invalid Data  ");
 172   3            lcd_cmd(0x01);  
 173   3          }
 174   2          
 175   2          else
 176   2          {
 177   3            lcd_cmd(0x01);
 178   3            //////////////////////////////To display humidity value
C51 COMPILER V9.56.0.0   DH11_16X2                                                         01/27/2021 18:42:17 PAGE 4   

 179   3            lcd_cmd(0x80);
 180   3            message("Humidity=");     
 181   3            a=(I_RH/10)+48;           //10th digit of humidity is stored in a
 182   3            b=(I_RH%10)+48;           // Unit digit of humidity is store in b
 183   3            lcd_cmd(0x89);
 184   3            lcd_data(a);
 185   3            lcd_cmd(0x8A);
 186   3            lcd_data(b);
 187   3            lcd_cmd(0x8B);
 188   3            lcd_data('%');    
 189   3            //////////////////////////////To display temp. value
 190   3            lcd_cmd(0xc0);
 191   3            message("  Temp. ="); 
 192   3            c=(I_Temp/10)+48;         //10th digit of humidity is stored in c
 193   3            d=(I_Temp%10)+48;         // Unit digit of humidity is store in d
 194   3            lcd_cmd(0xc9);
 195   3            lcd_data(c);
 196   3            lcd_cmd(0xcA);
 197   3            lcd_data(d);
 198   3            lcd_cmd(0xcB);
 199   3            lcd_data('C');  
 200   3          }   
 201   2          delay(1000);
 202   2        } 
 203   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    621    ----
   CONSTANT SIZE    =     50    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     17       3
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
